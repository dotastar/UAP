/*
You are given an array of csv strings indicating search results.  Each has a host_id, listing_id, score, and city.  Initially, results are sorted by highest score. 
 
Weâ€™d like to display these search results on a web page.  Write a function that returns groups of listings to be displayed on each page.  However, note that a given host may have several listings that show up in the results.  Reorder the list so that a host shows up at most once on a page if possible, but otherwise preserves the ordering.

Your program should return the new array and print out the results in blocks representing the pages.


Input:
*  An array of csv strings, with sort score
*  number of results per page

int PER_PAGE = 12
input_csv_array = [
  "host_id,listing_id,score,city",
  "1,28,300.1,San Francisco",
  "4,5,209.1,San Francisco",
  "20,7,208.1,San Francisco",
  "23,8,207.1,San Francisco",
  "16,10,206.1,Oakland",
  "1,16,205.1,San Francisco",
  "6,29,204.1,San Francisco",
  "7,20,203.1,San Francisco",
  "8,21,202.1,San Francisco",
  "2,18,201.1,San Francisco",
  "2,30,200.1,San Francisco",
  "15,27,109.1,Oakland",
  "10,13,108.1,Oakland",
  "11,26,107.1,Oakland",
  "12,9,106.1,Oakland",
  "13,1,105.1,Oakland",
  "22,17,104.1,Oakland",
  "1,2,103.1,Oakland",
  "28,24,102.1,Oakland",
  "18,14,11.1,San Jose",
  "6,25,10.1,Oakland",
  "19,15,9.1,San Jose",
  "3,19,8.1,San Jose",
  "3,11,7.1,Oakland",
  "27,12,6.1,Oakland",
  "1,3,5.1,Oakland",
  "25,4,4.1,San Jose",
  "5,6,3.1,San Jose",
  "29,22,2.1,San Jose",
  "30,23,1.1,San Jose"
]
 */
import java.io.*;
import java.util.*;
import org.json.simple.JSONObject;


/*
    PAGE = 3;
    String[] input = new String[] {
      "host_id,listing_id,score,city",
      "1,28,300.1,San Francisco",
      "1,5,209.1,San Francisco",
      "1,7,208.1,San Francisco",
      "1,8,207.1,San Francisco",
      "1,10,206.1,Oakland",
      "1,16,205.1,San Francisco",
      "1,29,204.1,San Francisco",
      "1,20,203.1,San Francisco",
    }

 */

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */

class Solution {
  private static final int PAGE = 3;
  public static void main(String[] args) {
    String[] input = new String[] {
      "host_id,listing_id,score,city",
      "1,28,300.1,San Francisco",
      "2,5,209.1,San Francisco",
      "1,7,208.1,San Francisco",
      "2,8,207.1,San Francisco",
      "1,10,206.1,Oakland",
      "2,16,205.1,San Francisco",
      "1,29,204.1,San Francisco",
      "2,20,203.1,San Francisco",
    };
    List<String> lists = new ArrayList<String>(Arrays.asList(input));
    lists.remove(0);
    List<List<String>> output = getPage(lists);
    int page = 1;
    for (List<String> l : output) {
      System.out.println("Page " + page + " :");
      for (String s: l) {
        System.out.println(s);
      }
      page++;
    }
    
  }
  public static List<List<String>> getPage(List<String> lists) {
    
    List<List<String>> results = new ArrayList<List<String>>();
    if (lists == null || lists.size() == 0) {
      return results;
    }
    Iterator it = lists.iterator();    
    HashSet<String> sets = new HashSet<String>();
    int count = 0;
    //list to store information in each page
    List<String> list = new ArrayList<String>();
    if (lists.size() <= PAGE) {
      list = lists;
      results.add(list);
    } else {
      while (it.hasNext()) {
        String curS = (String)it.next();
        String hostId = curS.split(",")[0];
        if (!sets.contains(hostId)) {
          list.add(curS);
          sets.add(hostId);
          it.remove();
        }
        if (list.size() == PAGE || !it.hasNext()) {
          if (list.size() < PAGE) {
            if (lists.size() != 0) {
              it = lists.iterator();
              sets.clear();
            } else{
              results.add(list);
              break;
            }
            
          } else {
            results.add(list);
            list = new ArrayList<String>();
            it = lists.iterator();
            sets.clear();
          }
        }
      }
    }
    
    return results;
    
  }
}
// I made it. Please take a look. 
//Thank you so much :)
