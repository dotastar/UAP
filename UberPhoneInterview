1.
  1，background
  2，project
  3，coding problem. 
  给一个String array，找出每个元素的Anagram，按照相同的anagram分为一组，最后输出每一组元素。
  我用了HashMap<String, ArrayList<String>>来做的，在计算key的时候，需要按字母顺序sort String作为key，
  于是follow up就是怎么不用sort，于是我就说可以把每一个string统计一下a,b,c。。。的频率，然后输出一个pattern a1b3c4。. From 1point 3acres bbs
  把这个pattern作为map的key。.鐣欏璁哄潧-涓€浜�-涓夊垎鍦�
  
  4，问当你用browser打开www.uber.com的时候，发生了生么。我就用http请求，到dns，到server，再返回，浏览器render之类的讲了一下

=========================================================================================================================

2. 
电面是国人哥们，问的题目不难，属于leetcode的简单题一类的。记不得了。

=========================================================================================================================

3.
店面被一个华人挂，说是给定一个stream，有time stamp 和 一个值 v，任意
一个时刻求过去x 秒内的percentile distribution。直接挂。我想你就不能搞个简单
一点的玩玩嘛。。。题目解释都快10分钟了
=========================================================================================================================

4. 
面的是Front end developer，但是其实都在问算法。听口音不是三哥，人还不错，是做full stack的，所以先问了一下jQuery的东西，然后问了一下当今最最最最最火的ReactJS（Javascript大法好！）
当然最后问我想用什么语言做题的时候，我毅然决然地选了java……（求轻喷）
. 1point3acres.com/bbs第一道，问的是给一个string 1 such as aabc找在string 2里的同型异构体anagrams，用hashtable。followup问能否再优化一下，我就加了个条件来判断指针指到string2最后离end还有string1.length()的距离的时候，就不用找了。
第二道，问了LRU Cache……直接开 leetcode抄以前的答案－ －0（我知道我很无耻，我错了……）
第三道，问了一下给一个集合，写出所有子集……这，用个DFS，画个树，递归一下就好了嘛～对吧

=========================================================================================================================

5.
刚结束不久的 Uber 电面
扫雷游戏 关键是 interviewer 假设各种 function都有了 一共没写几行
我俩就随便聊了聊
然后 以为肯定是不感兴趣 肯定挂了
然后 刚收了封邮件 onsite
之前面经没看过 大家可以写写完整试试
攒个人品 求onsite顺利

=========================================================================================================================

6. 
sigh 目测是跪了。。。
第一题是买卖股票1，两分钟写完

第二题是sort a deck of card，要求比nlogn更快，然后想法就是根据花色和大小确定牌应该在的位置，
然后swap，比如一张牌suite a，rank b，那么它应该在 a*13+b 的位置上。。。然后lz就傻逼了
，换回来的之后直接 i++了。。。应该继续判断是否要交换牌直到该位置的牌正确为止。。。

=========================================================================================================================

7.
先问一道system design相关的，如何保证service有high availability。
我把load balancer，brown out protection， throttling，single point
failure等等扯了一遍，大家觉得还有啥点没有cover到？
第二道是找出一个二叉树中任意两个叶子结点最长的距离。
直接递归做了，O(n)

=========================================================================================================================

8.
几小时前的电面，听到题就呆啦，从没见过的类型。。
题目是：
给一堆sentences，要求生成新的sentences.
蛤？
小哥说这是open-end question，你自己想怎么生成sentences。
蛤？
一定要是合理的sentences哦
什么意思？什么叫合理的sentences…
。。。
理解题意就花了二十分钟吧。。然后给了提示，说找word之间的dependency。
稍微讨论了一下用什么数据结构存这个dependency，想到用图吧
小哥说可以用图
开始写
然后就没有然后了

9.
sudoku solver。

10.
电面11/24：LRU Cache， follow-up 为什么用double linked list, Complexity, 修改为thread-safe的code

11.
就面了一道题，RateLimiter。就是限制在一定时间内调用某个API的次数。一开始用的CircularBuffer做的，写完发现CodePair里没有那个库。于是又改成了用Queue。
有一个小bug楼主写的时候没注意，后来debug de了半天。一直到最后才发现竟然是queue的poll和peek用混了。。。。。。
然后写testcase的时候就没有时间了，后来跟面试官的交流也不太顺利。可能因为已经超时了吧。。后来匆匆就结束了。

12.
找出string里所有是palindrome的subsequence（不是substring）

13.
OOD card deck，要现场deug，需要能运行 

14.
第一轮： Happy number
第二轮： 罗马数字 -> 阿拉伯数字
两轮都是白人小哥，很Nice

都是现题，写的快的话，会有比较多的Follow up。 
比如第二题 HashMap的初始化，可以放在哪些不同的地方。
可不可以不用Hashmap， 为什么要用Hashmap 等等
对Uber要有一定了解，有问喜欢Uber的原因，哪些地方可以改进等等。

15.
电面的是个国人大叔，第一次约到周四，结果被放鸽子，重新安排到周二，
接到电话先让介绍下自己，巴拉巴拉说了一下，他就说：恩，好， 然后开始慢慢问些technique的问题，问了问什么是array啊，
和arraylist的区别啊， 心想国人大叔就是好，这是要放水的节奏啊，心中窃喜。然后楼主犯二逼的事情就来了，
当问到tree和graph的区别，楼主很二的说了句：traverse data的时候performance不一样（太尼玛想抽自己了，明明是在问概念）
。然后国人大叔估计很无奈的说：这个不是最主要的，还有没有？ 脑子突然短路，说了句：tree有root，graph没有。
面试官：恩，还有么？就想不起来了，啊啊啊啊啊啊啊~


16.
电面2

国人大叔，没问project， 没问简历，就是聊天，最后最了一道题。估计最后挂在这道题上了。
题目： 一个二维数组，m * n， 给一个起点，给一个终点，让把从起点到终点的元素加起来，返回加合（心中窃喜，太简单了）。
就说用for循环就行，讲了下最naive的方法，两层循环。 写完，问有没有优化，心中有窃喜，把sprial matrix的方法讲了下，以为通过了
，谁知面试官说了句：恩，这个不是我想要的，而且感觉复杂度没变。啊啊啊啊啊，难道是我刷题刷错了，
这可是我刷得不多的几道题之一啊。这时时间快到了，让我问问题，我就问了优化到底怎么优化，面试官说了什么从四个角那开始，
要先pre-process啊，巴拉巴拉， 不懂啥意思（还是自己太渣）。就挂了。不出意外，两天后收到邮件说挂了。
哎，感觉国人大叔还是挺好的，没咋为难我，还是自己基础和题刷得不够。继续刷题吧。

面试的组是 uber backend growth supply
电话面试： 一个国人小哥 人蛮好的
1. distributed system 的概念 比如 什么是ACID
2. search an element in a rotated array, no duplicates
3. how to use computer to estimate the value of Pi (3.1415….)
之后两个小时候 发onsite通知


17.
distributed key-value store


18.
mirror tree， uber电面是要compile的，不像其他的，写写算法就行，之前没意识到, 
solution 
TreeNode mirror(root) 
node=copy(root); 
node.left=mirror(root.right); 
node.right=mirror(root.left); 
return node;


19.
如何实现Asynchronous service call？如何retry？讨论了一下Service oriented architecture的好处和弊端。 
solution: callback+multithread, retry 就再加一个thread
design，shortened url
